library(RSQLite)
library(ggplot2)
library(dplyr)
library(data.table)
library(choroplethr)
library(choroplethrMaps)
library(grid)
library(scales)

dir <- "....../pums/" #directory where data stored

dcon <- dbConnect(SQLite(), dbname="Final_project_sqlite")

################################################
#Combine the two people sub-tables as people 
################################################
dbSendQuery(dcon, "
            DROP TABLE people;
            ")
query <- "CREATE TABLE people AS 
SELECT * FROM peoA UNION ALL
SELECT * FROM peoB;"
res <- dbSendQuery(dcon, query)
################################################
#Create a table contain all variable with 500 rows
################################################
people_total_glance <- fetch(res,500)
dbClearResult(res)
View(people_total_glance)

dbSendQuery(dcon, "
            DROP TABLE peoA;
            ")
dbSendQuery(dcon, "
            DROP TABLE peoB;
            ")
dbListTables(dcon)
save(people_total_glance, file="people_total_glance.RData")
load("people_total_glance.RData")

################################################
#Create a table contain related: major, degree, income, state
################################################
query <- "DROP TABLE degree_major_income"
dbSendQuery(dcon, query)

query <- "CREATE TABLE degree_major_income AS
SELECT ST, PINCP, SCHL, FOD1P,
OCCP, INDP, WKHP, ENG, AGEP, CIT FROM people
WHERE SCHL IN (21,22,24) AND FOD1P in (3702, 3700, 3701,4005,2102) 
                         AND PINCP > 1000
ORDER BY SCHL"
dbSendQuery(dcon, query)

query <- "SELECT * FROM degree_major_income"
res <- dbSendQuery(dcon, query)
degree_major_income <- dbFetch(res, -1)
dbClearResult(res)
degree_major_income <- tbl_df(degree_major_income) 
degree_major_income
save(degree_major_income, file="degree_major_income.RData")

################################################
#Add Weight to degree_major_income table
################################################
load("degree_major_income.RData")
query <- "SELECT a.ST, a.SCHL, a.FOD1P, a.PINCP, b.de_ma_N
FROM degree_major_income AS a
LEFT JOIN (SELECT SCHL, FOD1P, count(*) AS de_ma_N 
from degree_major_income
group by SCHL, FOD1P) AS b 
ON a.SCHL = b.SCHL AND a.FOD1P = b.FOD1P;"
res <- dbSendQuery(dcon, query)
degree_major_income_wei <- dbFetch(res, -1)
dbClearResult(res)
degree_major_income_wei =tbl_df(degree_major_income_wei)
degree_major_income_wei

major_name <- "FOD1P,major
3700,Math
3701,Apllied Math
3702,Statistics
4005,Computer Science
2102,Computer Science"
major_name <- fread(major_name)

degree_name <- "SCHL, degree
21, Bachelor
22, Master
24, Phd"
degree_name <- fread(degree_name)

degree_major_income_wei <- left_join(degree_major_income_wei, major_name, by = c("FOD1P" = "FOD1P"))
degree_major_income_wei <- left_join(degree_major_income_wei, degree_name, by = c("SCHL" = "SCHL"))
save(degree_major_income_wei, file="degree_major_income_wei.RData")



################################################
#(nationwide)Income difference among Data Science related Major(nationwide)
################################################
load("degree_major_income_wei.RData")
k = 5000
median_income <- NULL
median_income_TX <- NULL

for (i in 1:k) 
{
  tempsample <- sample_n(degree_major_income_wei, 2000, weight = 1/de_ma_N)
  
  temp_median <- tempsample %>%
    group_by(major, degree) %>%
    summarise(Median = median(PINCP)) 
  temp_median_TX <- tempsample %>%
    filter(ST == 48) %>%
    group_by(major, degree) %>%
    summarise(Median = median(PINCP)) 
    
  median_income <- rbind(temp_median, median_income)
  median_income_TX <- rbind(temp_median_TX, median_income_TX)
}
save(median_income, file = "median_income.RData")
save(median_income_TX, file = "median_income_TX.RData")

load("median_income.RData")
load("median_income_TX.RData")

median_income$degree <-factor(median_income$degree , levels = unique(median_income$degree))

median_income_bach <- median_income %>%
  filter(degree == "Bachelor")

data_science_income_bach <- ggplot(median_income_bach) +
  aes(x = major, y = Median, fill = factor(major)) +
  geom_boxplot() +
  xlab("Major") +
  scale_y_continuous(labels = comma) +
  ylab("Average Income") +
  ggtitle("Data Science Major Average Income - Bachelor") +
  scale_fill_discrete("Major") +
  theme(axis.text.x = element_text(face='bold',size=23, color = "black"),
        axis.text.y = element_text(hjust = 1,size=17, color = "black"),
        axis.title.x = element_text(size=20, color = "black"),
        axis.title.y = element_text(face='bold',size=20, color = "black"),
        panel.background = element_rect(fill = 'white' ),
        #strip.text = element_text(face = 'bold', size = 20),
        plot.title = element_text(size = 40,colour="black"),
        legend.background = element_rect(fill = 'white' ), 
        panel.margin = unit(2, "line"), 
        panel.grid.major.x = element_line(color = "grey71"),
        legend.key.size = unit(2, "cm"),
        legend.text = element_text(size = 20),
        legend.title = element_text(size = 13))

median_income_mast <- median_income %>%
  filter(degree == "Master")

data_science_income_mast <- ggplot(median_income_mast) +
  aes(x = major, y = Median, fill = factor(major)) +
  geom_boxplot() +
  xlab("Major") +
  scale_y_continuous(labels = comma) +
  ylab("Average Income") +
  ggtitle("Data Science Major Average Income - Master") +
  scale_fill_discrete("Major") +
  theme(axis.text.x = element_text( face='bold',size=23, color = "black"),
        axis.text.y = element_text(hjust = 1,size=17, color = "black"),
        axis.title.x = element_text(size=20, color = "black"),
        axis.title.y = element_text(face='bold',size=20, color = "black"),
        panel.background = element_rect(fill = 'white' ),
        #strip.text = element_text(face = 'bold', size = 20),
        plot.title = element_text(size = 40,colour="black"),
        legend.background = element_rect(fill = 'white' ), 
        panel.margin = unit(2, "line"), 
        panel.grid.major.x = element_line(color = "grey71"),
        legend.key.size = unit(2, "cm"),
        legend.text = element_text(size = 20),
        legend.title = element_text(size = 13))

median_income_phd <- median_income %>%
  filter(degree == "Phd")

data_science_income_phd <- ggplot(median_income_phd) +
  aes(x = major, y = Median, fill = factor(major)) +
  geom_boxplot() +
  xlab("Major") +
  scale_y_continuous(labels = comma) +
  ylab("Average Income") +
  ggtitle("Data Science Major Average Income - PhD") +
  scale_fill_discrete("Major") +
  theme(axis.text.x = element_text(face='bold',size=23, color = "black"),
        axis.text.y = element_text(hjust = 1,size=17, color = "black"),
        axis.title.x = element_text(size=20, color = "black"),
        axis.title.y = element_text(face='bold',size=20, color = "black"),
        panel.background = element_rect(fill = 'white' ),
        #strip.text = element_text(face = 'bold', size = 20),
        plot.title = element_text(size = 40,colour="black"),
        legend.background = element_rect(fill = 'white' ), 
        panel.margin = unit(2, "line"), 
        panel.grid.major.x = element_line(color = "grey71"),
        legend.key.size = unit(2, "cm"),
        legend.text = element_text(size = 20),
        legend.title = element_text(size = 13))




data_science_income <- ggplot(median_income) +
  aes(x = major, y = Median, fill = factor(major)) +
  facet_grid( ~ degree) +
  geom_boxplot() +
  xlab("Major") +
  scale_y_continuous(labels = comma) +
  ylab("Average Income") +
  ggtitle("Statistics, Computer Science, Math, Average Income") +
  scale_fill_discrete("Major") +
  theme(axis.text.x = element_text(angle = 30, hjust = 1, face='bold',size=17, color = "black"),
        axis.text.y = element_text(hjust = 1,size=15, color = "black"),
        axis.title.x = element_text(face='bold',size=20, color = "black"),
        axis.title.y = element_text(face='bold',size=20, color = "black"),
        panel.background = element_rect(fill = 'white' ),
        strip.text = element_text(face = 'bold', size = 20),
        plot.title = element_text(size = 35,colour="black"),
        legend.background = element_rect(fill = 'white' ), 
        panel.margin = unit(2, "line"), 
        panel.grid.major.x = element_line(color = "grey71"))

################################################
#(Texas)Income difference among Data Science related Major
################################################
median_income_TX_adj <- median_income_TX %>%
  filter(Median < 170000)

data_science_income_TX <- ggplot(median_income_TX_adj) +
  aes(x = major, y = Median, fill = factor(major)) +
  facet_grid( ~ degree) +
  geom_boxplot() +
  ggtitle("Texas Statistics, Math, Computer Science Major Income") +
  xlab("") +
  scale_y_continuous(labels = comma) +
  ylab("") +
  scale_fill_discrete("Degree") +
  theme(axis.text.x = element_text(angle = 30, hjust = 1, face='bold',size=17, color = "black"),
        axis.text.y = element_text(hjust = 1,size=15, color = "black"),
        panel.background = element_rect(fill = 'white' ),
        strip.text = element_text(face = 'bold', size = 20),
        plot.title = element_text(size = 35,colour="black"),
        legend.background = element_rect(fill = 'white' ), 
        panel.margin = unit(2, "line"), 
        panel.grid.major.x = element_line(color = "grey71"))
################################################
#Statistics income in diferent states corresponding to each degree
################################################
state_code = "ST,region
001,alabama
002,alaska
004,arizona
005,arkansas
006,california
008,colorado
009,connecticut
010,delaware
011,district of columbia
012,florida
013,georgia
015,hawaii
016,idaho
017,illinois
018,indiana
019,iowa
020,kansas
021,kentucky
022,louisiana
023,maine
024,maryland
025,massachusetts
026,michigan
027,minnesota
028,mississippi
029,missouri
030,montana
031,nebraska
032,nevada
033,new hampshire
034,new jersey
035,new mexico
036,new york
037,north carolina
038,north dakota
039,ohio
040,oklahoma
041,oregon
042,pennsylvania
044,rhode island
045,south carolina
046,south dakota
047,tennessee
048,texas
049,utah
050,vermont
051,virginia
053,washington
054,west virginia
055,wisconsin
056,wyoming"
state_code <- fread(state_code)
dbWriteTable(conn=dcon, name="state_code", state_code,
             append=TRUE, row.names=FALSE)

load("degree_major_income.RData")
#############################
# Bachelor STAT income in each state
#############################
degree_major_income <- full_join(degree_major_income, state_code, by = c("ST" = "ST"))
STAT_income_bach <-  degree_major_income %>%
  filter(SCHL == 21) %>%
  group_by(region) %>%
  summarise(value = mean(PINCP)) 

state_choropleth(STAT_income_bach, title = "Bachelor Statistics Income in each state", num_colors=9)

#############################
# Master STAT income in each state
#############################
STAT_income_mast <-  degree_major_income %>%
  filter(SCHL == 22) %>%
  group_by(region) %>%
  summarise(value = mean(PINCP)) 

state_choropleth(STAT_income_mast, title = "Master Statistics Income in each state", num_colors=9)

#############################
# Phd STAT income in each state
#############################
STAT_income_phd <-  degree_major_income %>%
  filter(SCHL == 24) %>%
  group_by(region) %>%
  summarise(value = mean(PINCP)) 

state_choropleth(STAT_income_phd, title = "Phd Statistics Income in each state", num_colors=9)


#############################
#Data Science related major proportion in each state
#############################
query <- "Select FOD1P, ST from people;"
res <- dbSendQuery(dcon, query)
data_science_proportion <- dbFetch(res, -1)
dbClearResult(res)

data_science_pro_plus <- full_join(data_science_proportion, state_code, by = c("ST" = "ST"))
data_science_pro_specific <- data_science_pro_plus %>%
  na.omit() %>%
  filter(FOD1P %in% c(3702, 3700, 3701,4005,2102, 6212, 2101)) %>%
  group_by(region) %>%
  summarise(count = n())

data_science_pro_percent <- data_science_pro_plus %>%
  na.omit() %>%
  group_by(region) %>%
  summarise(count = n()) %>%
  mutate(value = data_science_pro_specific$count/count)

state_choropleth(data_science_pro_percent, title = "", num_colors=9)



################################################
#Occupation for Statistics Major
################################################
occupation_code = 
"OCCP, Occupation_Name
bbbb, .N/A (less than 16 years old/NILF who last worked.more than 5 years ago or never worked)
0010, .MGR-CHIEF EXECUTIVES AND LEGISLATORS
0020, .MGR-GENERAL AND OPERATIONS MANAGERS
0040, .MGR-ADVERTISING AND PROMOTIONS MANAGERS
0050, .MGR-MARKETING AND SALES MANAGERS
0060, .MGR-PUBLIC RELATIONS AND FUNDRAISING MANAGERS
0100, .MGR-ADMINISTRATIVE SERVICES MANAGERS
0110, .MGR-COMPUTER AND INFORMATION SYSTEMS MANAGERS
0120, .MGR-FINANCIAL MANAGERS
0135, .MGR-COMPENSATION AND BENEFITS MANAGERS
0136, .MGR-HUMAN RESOURCES MANAGERS
0137, .MGR-TRAINING AND DEVELOPMENT MANAGERS
0140, .MGR-INDUSTRIAL PRODUCTION MANAGERS
0150, .MGR-PURCHASING MANAGERS
0160, .MGR-TRANSPORTATION. STORAGE. AND DISTRIBUTION MANAGERS
0205, .MGR-FARMERS. RANCHERS. AND OTHER AGRICULTURAL MANAGERS
0220, .MGR-CONSTRUCTION MANAGERS
0230, .MGR-EDUCATION ADMINISTRATORS
0300, .MGR-ARCHITECTURAL AND ENGINEERING MANAGERS
0310, .MGR-FOOD SERVICE MANAGERS
0330, .MGR-GAMING MANAGERS
0340, .MGR-LODGING MANAGERS
0350, .MGR-MEDICAL AND HEALTH SERVICES MANAGERS
0360, .MGR-NATURAL SCIENCES MANAGERS
0410, .MGR-PROPERTY. REAL ESTATE. AND COMMUNITY ASSOCIATION.MANAGERS
0420, .MGR-SOCIAL AND COMMUNITY SERVICE MANAGERS
0425, .MGR-EMERGENCY MANAGEMENT DIRECTORS
0430, .MGR-MISCELLANEOUS MANAGERS. INCLUDING FUNERAL SERVICE.MANAGERS AND POSTMASTERS AND MAIL SUPERINTENDENTS
0500, .BUS-AGENTS AND BUSINESS MANAGERS OF ARTISTS. PERFORMERS.AND ATHLETES
0510, .BUS-BUYERS AND PURCHASING AGENTS. FARM PRODUCTS
0520, .BUS-WHOLESALE AND RETAIL BUYERS. EXCEPT FARM PRODUCTS
0530, .BUS-PURCHASING AGENTS. EXCEPT WHOLESALE. RETAIL. AND FARM.PRODUCTS
0540, .BUS-CLAIMS ADJUSTERS. APPRAISERS. EXAMINERS. AND.INVESTIGATORS
0565, .BUS-COMPLIANCE OFFICERS
0600, .BUS-COST ESTIMATORS
0630, .BUS-HUMAN RESOURCES WORKERS
0640, .BUS-COMPENSATION. BENEFITS. AND JOB ANALYSIS SPECIALISTS
0650, .BUS-TRAINING AND DEVELOPMENT SPECIALISTS
0700, .BUS-LOGISTICIANS
0710, .BUS-MANAGEMENT ANALYSTS
0725, .BUS-MEETING. CONVENTION. AND EVENT PLANNERS
0726, .BUS-FUNDRAISERS
0735, .BUS-MARKET RESEARCH ANALYSTS AND MARKETING SPECIALISTS
0740, .BUS-BUSINESS OPERATIONS SPECIALISTS. ALL OTHER
0800, .FIN-ACCOUNTANTS AND AUDITORS
0810, .FIN-APPRAISERS AND ASSESSORS OF REAL ESTATE
0820, .FIN-BUDGET ANALYSTS
0830, .FIN-CREDIT ANALYSTS
0840, .FIN-FINANCIAL ANALYSTS
0850, .FIN-PERSONAL FINANCIAL ADVISORS
0860, .FIN-INSURANCE UNDERWRITERS
0900, .FIN-FINANCIAL EXAMINERS
0910, .FIN-CREDIT COUNSELORS AND LOAN OFFICERS
0930, .FIN-TAX EXAMINERS AND COLLECTORS. AND REVENUE AGENTS
0940, .FIN-TAX PREPARERS
0950, .FIN-FINANCIAL SPECIALISTS. ALL OTHER
1005, .CMM-COMPUTER AND INFORMATION RESEARCH SCIENTISTS
1006, .CMM-COMPUTER SYSTEMS ANALYSTS
1007, .CMM-INFORMATION SECURITY ANALYSTS
1010, .CMM-COMPUTER PROGRAMMERS
1020, .CMM-SOFTWARE DEVELOPERS. APPLICATIONS AND SYSTEMS SOFTWARE
1030, .CMM-WEB DEVELOPERS
1050, .CMM-COMPUTER SUPPORT SPECIALISTS
1060, .CMM-DATABASE ADMINISTRATORS
1105, .CMM-NETWORK AND COMPUTER SYSTEMS ADMINISTRATORS
1106, .CMM-COMPUTER NETWORK ARCHITECTS
1107, .CMM-COMPUTER OCCUPATIONS. ALL OTHER
1200, .CMM-ACTUARIES
1220, .CMM-OPERATIONS RESEARCH ANALYSTS
1240, .CMM-MISCELLANEOUS MATHEMATICAL SCIENCE OCCUPATIONS..INCLUDING MATHEMATICIANS AND STATISTICIANS
1300, .ENG-ARCHITECTS. EXCEPT NAVAL
1310, .ENG-SURVEYORS. CARTOGRAPHERS. AND PHOTOGRAMMETRISTS
1320, .ENG-AEROSPACE ENGINEERS
1340, .ENG-BIOMEDICAL AND AGRICULTURAL ENGINEERS
1350, .ENG-CHEMICAL ENGINEERS
1360, .ENG-CIVIL ENGINEERS
1400, .ENG-COMPUTER HARDWARE ENGINEERS
1410, .ENG-ELECTRICAL AND ELECTRONICS ENGINEERS
1420, .ENG-ENVIRONMENTAL ENGINEERS
1430, .ENG-INDUSTRIAL ENGINEERS. INCLUDING HEALTH AND SAFETY
1440, .ENG-MARINE ENGINEERS AND NAVAL ARCHITECTS
1450, .ENG-MATERIALS ENGINEERS
1460, .ENG-MECHANICAL ENGINEERS
1520, .ENG-PETROLEUM. MINING AND GEOLOGICAL ENGINEERS. INCLUDING.MINING SAFETY ENGINEERS
1530, .ENG-MISCELLANEOUS ENGINEERS. INCLUDING NUCLEAR ENGINEERS
1540, .ENG-DRAFTERS
1550, .ENG-ENGINEERING TECHNICIANS. EXCEPT DRAFTERS
1560, .ENG-SURVEYING AND MAPPING TECHNICIANS
1600, .SCI-AGRICULTURAL AND FOOD SCIENTISTS
1610, .SCI-BIOLOGICAL SCIENTISTS
1640, .SCI-CONSERVATION SCIENTISTS AND FORESTERS
1650, .SCI-MEDICAL SCIENTISTS. AND LIFE SCIENTISTS. ALL OTHER
1700, .SCI-ASTRONOMERS AND PHYSICISTS
1710, .SCI-ATMOSPHERIC AND SPACE SCIENTISTS
1720, .SCI-CHEMISTS AND MATERIALS SCIENTISTS
1740, .SCI-ENVIRONMENTAL SCIENTISTS AND GEOSCIENTISTS
1760, .SCI-PHYSICAL SCIENTISTS. ALL OTHER
1800, .SCI-ECONOMISTS
1820, .SCI-PSYCHOLOGISTS
1840, .SCI-URBAN AND REGIONAL PLANNERS
1860, .SCI-MISCELLANEOUS SOCIAL SCIENTISTS. INCLUDING SURVEY RESEARCHERS AND SOCIOLOGISTS
1900, .SCI-AGRICULTURAL AND FOOD SCIENCE TECHNICIANS
1910, .SCI-BIOLOGICAL TECHNICIANS
1920, .SCI-CHEMICAL TECHNICIANS
1930, .SCI-GEOLOGICAL AND PETROLEUM TECHNICIANS. AND NUCLEAR TECHNICIANS
1965, .SCI-MISCELLANEOUS LIFE. PHYSICAL. AND SOCIAL SCIENCE.TECHNICIANS.INCLUDING SOCIAL SCIENCE RESEARCH ASSISTANTS
2000, .CMS-COUNSELORS
2010, .CMS-SOCIAL WORKERS
2015, .CMS-PROBATION OFFICERS AND CORRECTIONAL TREATMENT .SPECIALISTS
2016, .CMS-SOCIAL AND HUMAN SERVICE ASSISTANTS
2025, .CMS-MISCELLANEOUS COMMUNITY AND SOCIAL SERVICE SPECIALISTS..INCLUDING HEALTH EDUCATORS AND COMMUNITY HEALTH WORKERS
2040, .CMS-CLERGY
2050, .CMS-DIRECTORS. RELIGIOUS ACTIVITIES AND EDUCATION
2060, .CMS-RELIGIOUS WORKERS. ALL OTHER
2100, .LGL-LAWYERS. AND JUDGES. MAGISTRATES. AND OTHER JUDICIAL.WORKERS
2105, .LGL-JUDICIAL LAW CLERKS
2145, .LGL-PARALEGALS AND LEGAL ASSISTANTS
2160, .LGL-MISCELLANEOUS LEGAL SUPPORT WORKERS
2200, .EDU-POSTSECONDARY TEACHERS
2300, .EDU-PRESCHOOL AND KINDERGARTEN TEACHERS
2310, .EDU-ELEMENTARY AND MIDDLE SCHOOL TEACHERS
2320, .EDU-SECONDARY SCHOOL TEACHERS
2330, .EDU-SPECIAL EDUCATION TEACHERS
2340, .EDU-OTHER TEACHERS AND INSTRUCTORS
2400, .EDU-ARCHIVISTS. CURATORS. AND MUSEUM TECHNICIANS
2430, .EDU-LIBRARIANS
2440, .EDU-LIBRARY TECHNICIANS
2540, .EDU-TEACHER ASSISTANTS
2550, .EDU-OTHER EDUCATION. TRAINING. AND LIBRARY WORKERS
2600, .ENT-ARTISTS AND RELATED WORKERS
2630, .ENT-DESIGNERS
2700, .ENT-ACTORS
2710, .ENT-PRODUCERS AND DIRECTORS
2720, .ENT-ATHLETES. COACHES. UMPIRES. AND RELATED WORKERS
2740, .ENT-DANCERS AND CHOREOGRAPHERS
2750, .ENT-MUSICIANS. SINGERS. AND RELATED WORKERS
2760, .ENT-ENTERTAINERS AND PERFORMERS. SPORTS AND RELATED.WORKERS. ALL OTHER
2800, .ENT-ANNOUNCERS
2810, .ENT-NEWS ANALYSTS. REPORTERS AND CORRESPONDENTS
2825, .ENT-PUBLIC RELATIONS SPECIALISTS
2830, .ENT-EDITORS
2840, .ENT-TECHNICAL WRITERS
2850, .ENT-WRITERS AND AUTHORS
2860, .ENT-MISCELLANEOUS MEDIA AND COMMUNICATION WORKERS
2900, .ENT-BROADCAST AND SOUND ENGINEERING TECHNICIANS AND RADIO OPERATORS. AND MEDIA AND COMMUNICATION EQUIPMENT WORKERS ALL OTHER
2910, .ENT-PHOTOGRAPHERS
2920, .ENT-TELEVISION. VIDEO. AND MOTION PICTURE CAMERA OPERATORS AND EDITORS
3000, .MED-CHIROPRACTORS
3010, .MED-DENTISTS
3030, .MED-DIETITIANS AND NUTRITIONISTS
3040, .MED-OPTOMETRISTS
3050, .MED-PHARMACISTS
3060, .MED-PHYSICIANS AND SURGEONS
3110, .MED-PHYSICIAN ASSISTANTS
3120, .MED-PODIATRISTS
3140, .MED-AUDIOLOGISTS
3150, .MED-OCCUPATIONAL THERAPISTS
3160, .MED-PHYSICAL THERAPISTS
3200, .MED-RADIATION THERAPISTS
3210, .MED-RECREATIONAL THERAPISTS
3220, .MED-RESPIRATORY THERAPISTS
3230, .MED-SPEECH-LANGUAGE PATHOLOGISTS
3245, .MED-OTHER THERAPISTS. INCLUDING EXERCISE PHYSIOLOGISTS
3250, .MED-VETERINARIANS
3255, .MED-REGISTERED NURSES
3256, .MED-NURSE ANESTHETISTS
3258, .MED-NURSE PRACTITIONERS. AND NURSE MIDWIVES
3260, .MED-HEALTH DIAGNOSING AND TREATING PRACTITIONERS. ALL OTHER
3300, .MED-CLINICAL LABORATORY TECHNOLOGISTS AND TECHNICIANS
3310, .MED-DENTAL HYGIENISTS
3320, .MED-DIAGNOSTIC RELATED TECHNOLOGISTS AND TECHNICIANS
3400, .MED-EMERGENCY MEDICAL TECHNICIANS AND PARAMEDICS
3420, .MED-HEALTH PRACTITIONER SUPPORT TECHNOLOGISTS AND TECHNICIANS
3500, .MED-LICENSED PRACTICAL AND LICENSED VOCATIONAL NURSES
3510, .MED-MEDICAL RECORDS AND HEALTH INFORMATION TECHNICIANS
3520, .MED-OPTICIANS. DISPENSING
3535, .MED-MISCELLANEOUS HEALTH TECHNOLOGISTS AND TECHNICIANS
3540, .MED-OTHER HEALTHCARE PRACTITIONERS AND TECHNICAL OCCUPATIONS
3600, .HLS-NURSING. PSYCHIATRIC. AND HOME HEALTH AIDES
3610, .HLS-OCCUPATIONAL THERAPY ASSISTANTS AND AIDES
3620, .HLS-PHYSICAL THERAPIST ASSISTANTS AND AIDES
3630, .HLS-MASSAGE THERAPISTS
3640, .HLS-DENTAL ASSISTANTS
3645, .HLS-MEDICAL ASSISTANTS
3646, .HLS-MEDICAL TRANSCRIPTIONISTS
3647, .HLS-PHARMACY AIDES
3648, .HLS-VETERINARY ASSISTANTS AND LABORATORY ANIMAL CARETAKERS
3649, .HLS-PHLEBOTOMISTS
3655, .HLS-HEALTHCARE SUPPORT WORKERS. ALL OTHER. INCLUDING MEDICAL EQUIPMENT PREPARERS
3700, .PRT-FIRST-LINE SUPERVISORS OF CORRECTIONAL OFFICERS
3710, .PRT-FIRST-LINE SUPERVISORS OF POLICE AND DETECTIVES
3720, .PRT-FIRST-LINE SUPERVISORS OF FIRE FIGHTING AND PREVENTION WORKERS
3730, .PRT-FIRST-LINE SUPERVISORS OF PROTECTIVE SERVICE WORKERS. ALL OTHER
3740, .PRT-FIREFIGHTERS
3750, .PRT-FIRE INSPECTORS
3800, .PRT-BAILIFFS. CORRECTIONAL OFFICERS. AND JAILERS
3820, .PRT-DETECTIVES AND CRIMINAL INVESTIGATORS
3840, .PRT-MISCELLANEOUS LAW ENFORCEMENT WORKERS
3850, .PRT-POLICE OFFICERS
3900, .PRT-ANIMAL CONTROL WORKERS
3910, .PRT-PRIVATE DETECTIVES AND INVESTIGATORS
3930, .PRT-SECURITY GUARDS AND GAMING SURVEILLANCE OFFICERS
3940, .PRT-CROSSING GUARDS
3945, .PRT-TRANSPORTATION SECURITY SCREENERS
3955, .PRT-LIFEGUARDS AND OTHER RECREATIONAL. AND ALL OTHER PROTECTIVE SERVICE WORKERS
4000, .EAT-CHEFS AND HEAD COOKS
4010, .EAT-FIRST-LINE SUPERVISORS OF FOOD PREPARATION AND SERVING WORKERS
4020, .EAT-COOKS
4030, .EAT-FOOD PREPARATION WORKERS
4040, .EAT-BARTENDERS
4050, .EAT-COMBINED FOOD PREPARATION AND SERVING WORKERS. INCLUDING FAST FOOD
4060, .EAT-COUNTER ATTENDANTS. CAFETERIA. FOOD CONCESSION. AND COFFEE SHOP
4110, .EAT-WAITERS AND WAITRESSES
4120, .EAT-FOOD SERVERS. NONRESTAURANT
4130, .EAT-MISCELLANEOUS FOOD PREPARATION AND SERVING RELATED WORKERS. INCLUDING DINING ROOM AND CAFETERIA ATTENDANTS AND BARTENDER HELPERS
4140, .EAT-DISHWASHERS
4150, .EAT-HOSTS AND HOSTESSES. RESTAURANT. LOUNGE. AND COFFEE SHOP
4200, .CLN-FIRST-LINE SUPERVISORS OF HOUSEKEEPING AND JANITORIAL WORKERS
4210, .CLN-FIRST-LINE SUPERVISORS OF LANDSCAPING. LAWN SERVICE. AND GROUNDSKEEPING WORKERS
4220, .CLN-JANITORS AND BUILDING CLEANERS
4230, .CLN-MAIDS AND HOUSEKEEPING CLEANERS
4240, .CLN-PEST CONTROL WORKERS
4250, .CLN-GROUNDS MAINTENANCE WORKERS
4300, .PRS-FIRST-LINE SUPERVISORS OF GAMING WORKERS
4320, .PRS-FIRST-LINE SUPERVISORS OF PERSONAL SERVICE WORKERS
4340, .PRS-ANIMAL TRAINERS
4350, .PRS-NONFARM ANIMAL CARETAKERS
4400, .PRS-GAMING SERVICES WORKERS
4410, .PRS-MOTION PICTURE PROJECTIONISTS
4420, .PRS-USHERS. LOBBY ATTENDANTS. AND TICKET TAKERS
4430, .PRS-MISCELLANEOUS ENTERTAINMENT ATTENDANTS AND RELATED WORKERS
4460, .PRS-EMBALMERS AND FUNERAL ATTENDANTS
4465, .PRS-MORTICIANS. UNDERTAKERS. AND FUNERAL DIRECTORS
4500, .PRS-BARBERS					
4510, .PRS-HAIRDRESSERS. HAIRSTYLISTS. AND COSMETOLOGISTS
4520, .PRS-MISCELLANEOUS PERSONAL APPEARANCE WORKERS
4530, .PRS-BAGGAGE PORTERS. BELLHOPS. AND CONCIERGES
4540, .PRS-TOUR AND TRAVEL GUIDES
4600, .PRS-CHILDCARE WORKERS
4610, .PRS-PERSONAL CARE AIDES
4620, .PRS-RECREATION AND FITNESS WORKERS
4640, .PRS-RESIDENTIAL ADVISORS
4650, .PRS-PERSONAL CARE AND SERVICE WORKERS. ALL OTHER
4700, .SAL-FIRST-LINE SUPERVISORS OF RETAIL SALES WORKERS
4710, .SAL-FIRST-LINE SUPERVISORS OF NON-RETAIL SALES WORKERS
4720, .SAL-CASHIERS
4740, .SAL-COUNTER AND RENTAL CLERKS
4750, .SAL-PARTS SALESPERSONS
4760, .SAL-RETAIL SALESPERSONS
4800, .SAL-ADVERTISING SALES AGENTS
4810, .SAL-INSURANCE SALES AGENTS
4820, .SAL-SECURITIES. COMMODITIES. AND FINANCIAL SERVICES SALES AGENTS
4830, .SAL-TRAVEL AGENTS
4840, .SAL-SALES REPRESENTATIVES. SERVICES. ALL OTHER
4850, .SAL-SALES REPRESENTATIVES. WHOLESALE AND MANUFACTURING
4900, .SAL-MODELS. DEMONSTRATORS. AND PRODUCT PROMOTERS
4920, .SAL-REAL ESTATE BROKERS AND SALES AGENTS
4930, .SAL-SALES ENGINEERS
4940, .SAL-TELEMARKETERS
4950, .SAL-DOOR-TO-DOOR SALES WORKERS. NEWS AND STREET VENDORS. AND RELATED WORKERS
4965, .SAL-SALES AND RELATED WORKERS. ALL OTHER
5000, .OFF-FIRST-LINE SUPERVISORS OF OFFICE AND ADMINISTRATIVE SUPPORT WORKERS
5010, .OFF-SWITCHBOARD OPERATORS. INCLUDING ANSWERING SERVICE
5020, .OFF-TELEPHONE OPERATORS
5030, .OFF-COMMUNICATIONS EQUIPMENT OPERATORS. ALL OTHER
5100, .OFF-BILL AND ACCOUNT COLLECTORS
5110, .OFF-BILLING AND POSTING CLERKS
5120, .OFF-BOOKKEEPING. ACCOUNTING. AND AUDITING CLERKS
5130, .OFF-GAMING CAGE WORKERS
5140, .OFF-PAYROLL AND TIMEKEEPING CLERKS
5150, .OFF-PROCUREMENT CLERKS
5160, .OFF-TELLERS
5165, .OFF-FINANCIAL CLERKS. ALL OTHER
5200, .OFF-BROKERAGE CLERKS
5220, .OFF-COURT. MUNICIPAL. AND LICENSE CLERKS
5230, .OFF-CREDIT AUTHORIZERS. CHECKERS. AND CLERKS
5240, .OFF-CUSTOMER SERVICE REPRESENTATIVES
5250, .OFF-ELIGIBILITY INTERVIEWERS. GOVERNMENT PROGRAMS
5260, .OFF-FILE CLERKS
5300, .OFF-HOTEL. MOTEL. AND RESORT DESK CLERKS
5310, .OFF-INTERVIEWERS. EXCEPT ELIGIBILITY AND LOAN
5320, .OFF-LIBRARY ASSISTANTS. CLERICAL
5330, .OFF-LOAN INTERVIEWERS AND CLERKS
5340, .OFF-NEW ACCOUNTS CLERKS
5350, .OFF-CORRESPONDENCE CLERKS AND ORDER CLERKS
5360, .OFF-HUMAN RESOURCES ASSISTANTS. EXCEPT PAYROLL AND TIMEKEEPING
5400, .OFF-RECEPTIONISTS AND INFORMATION CLERKS
5410, .OFF-RESERVATION AND TRANSPORTATION TICKET AGENTS AND TRAVEL CLERKS
5420, .OFF-INFORMATION AND RECORD CLERKS. ALL OTHER
5500, .OFF-CARGO AND FREIGHT AGENTS
5510, .OFF-COURIERS AND MESSENGERS
5520, .OFF-DISPATCHERS
5530, .OFF-METER READERS. UTILITIES
5540, .OFF-POSTAL SERVICE CLERKS
5550, .OFF-POSTAL SERVICE MAIL CARRIERS
5560, .OFF-POSTAL SERVICE MAIL SORTERS. PROCESSORS. AND PROCESSING MACHINE OPERATORS
5600, .OFF-PRODUCTION. PLANNING. AND EXPEDITING CLERKS
5610, .OFF-SHIPPING. RECEIVING. AND TRAFFIC CLERKS
5620, .OFF-STOCK CLERKS AND ORDER FILLERS
5630, .OFF-WEIGHERS. MEASURERS. CHECKERS. AND SAMPLERS. RECORDKEEPING
5700, .OFF-SECRETARIES AND ADMINISTRATIVE ASSISTANTS
5800, .OFF-COMPUTER OPERATORS
5810, .OFF-DATA ENTRY KEYERS
5820, .OFF-WORD PROCESSORS AND TYPISTS
5840, .OFF-INSURANCE CLAIMS AND POLICY PROCESSING CLERKS
5850, .OFF-MAIL CLERKS AND MAIL MACHINE OPERATORS. EXCEPT POSTAL SERVICE
5860, .OFF-OFFICE CLERKS. GENERAL
5900, .OFF-OFFICE MACHINE OPERATORS. EXCEPT COMPUTER
5910, .OFF-PROOFREADERS AND COPY MARKERS
5920, .OFF-STATISTICAL ASSISTANTS
5940, .OFF-MISCELLANEOUS OFFICE AND ADMINISTRATIVE SUPPORT WORKERS. INCLUDING DESKTOP PUBLISHERS
6005, .FFF-FIRST-LINE SUPERVISORS OF FARMING. FISHING. AND FORESTRY WORKERS
6010, .FFF-AGRICULTURAL INSPECTORS
6040, .FFF-GRADERS AND SORTERS. AGRICULTURAL PRODUCTS
6050, .FFF-MISCELLANEOUS AGRICULTURAL WORKERS. INCLUDING ANIMAL BREEDERS
6100, .FFF-FISHING AND HUNTING WORKERS
6120, .FFF-FOREST AND CONSERVATION WORKERS
6130, .FFF-LOGGING WORKERS
6200, .CON-FIRST-LINE SUPERVISORS OF CONSTRUCTION TRADES AND EXTRACTION WORKERS
6210, .CON-BOILERMAKERS
6220, .CON-BRICKMASONS. BLOCKMASONS. STONEMASONS. AND REINFORCING IRON AND REBAR WORKERS
6230, .CON-CARPENTERS
6240, .CON-CARPET. FLOOR. AND TILE INSTALLERS AND FINISHERS
6250, .CON-CEMENT MASONS. CONCRETE FINISHERS. AND TERRAZZO WORKERS
6260, .CON-CONSTRUCTION LABORERS
6300, .CON-PAVING. SURFACING. AND TAMPING EQUIPMENT OPERATORS
6320, .CON-CONSTRUCTION EQUIPMENT OPERATORS. EXCEPT PAVING.SURFACING. AND TAMPING EQUIPMENT OPERATORS
6330, .CON-DRYWALL INSTALLERS. CEILING TILE INSTALLERS. AND TAPERS
6355, .CON-ELECTRICIANS
6360, .CON-GLAZIERS
6400, .CON-INSULATION WORKERS
6420, .CON-PAINTERS AND PAPERHANGERS
6440, .CON-PIPELAYERS. PLUMBERS. PIPEFITTERS. AND STEAMFITTERS
6460, .CON-PLASTERERS AND STUCCO MASONS
6515, .CON-ROOFERS
6520, .CON-SHEET METAL WORKERS
6530, .CON-STRUCTURAL IRON AND STEEL WORKERS
6600, .CON-HELPERS. CONSTRUCTION TRADES
6660, .CON-CONSTRUCTION AND BUILDING INSPECTORS
6700, .CON-ELEVATOR INSTALLERS AND REPAIRERS
6710, .CON-FENCE ERECTORS
6720, .CON-HAZARDOUS MATERIALS REMOVAL WORKERS
6730, .CON-HIGHWAY MAINTENANCE WORKERS
6740, .CON-RAIL-TRACK LAYING AND MAINTENANCE EQUIPMENT OPERATORS
6765, .CON-MISCELLANEOUS CONSTRUCTION WORKERS. INCLUDING SOLAR PHOTOVOLTAIC INSTALLERS. SEPTIC TANK SERVICERS AND SEWER PIPE CLEANERS
6800, .EXT-DERRICK. ROTARY DRILL. AND SERVICE UNIT OPERATORS. AND ROUSTABOUTS. OIL. GAS. AND MINING
6820, .EXT-EARTH DRILLERS. EXCEPT OIL AND GAS
6830, .EXT-EXPLOSIVES WORKERS. ORDNANCE HANDLING EXPERTS. AND BLASTERS
6840, .EXT-MINING MACHINE OPERATORS
6940, .EXT-MISCELLANEOUS EXTRACTION WORKERS. INCLUDING ROOF BOLTERS AND HELPERS
7000, .RPR-FIRST-LINE SUPERVISORS OF MECHANICS. INSTALLERS. AND REPAIRERS
7010, .RPR-COMPUTER. AUTOMATED TELLER. AND OFFICE MACHINE REPAIRERS
7020, .RPR-RADIO AND TELECOMMUNICATIONS EQUIPMENT INSTALLERS AND REPAIRERS
7030, .RPR-AVIONICS TECHNICIANS
7040, .RPR-ELECTRIC MOTOR. POWER TOOL. AND RELATED REPAIRERS
7100, .RPR-ELECTRICAL AND ELECTRONICS REPAIRERS. TRANSPORTATION EQUIPMENT. AND INDUSTRIAL AND UTILITY
7110, .RPR-ELECTRONIC EQUIPMENT INSTALLERS AND REPAIRERS. MOTOR VEHICLES
7120, .RPR-ELECTRONIC HOME ENTERTAINMENT EQUIPMENT INSTALLERS AND  REPAIRERS
7130, .RPR-SECURITY AND FIRE ALARM SYSTEMS INSTALLERS
7140, .RPR-AIRCRAFT MECHANICS AND SERVICE TECHNICIANS
7150, .RPR-AUTOMOTIVE BODY AND RELATED REPAIRERS
7160, .RPR-AUTOMOTIVE GLASS INSTALLERS AND REPAIRERS
7200, .RPR-AUTOMOTIVE SERVICE TECHNICIANS AND MECHANICS
7210, .RPR-BUS AND TRUCK MECHANICS AND DIESEL ENGINE SPECIALISTS
7220, .RPR-HEAVY VEHICLE AND MOBILE EQUIPMENT SERVICE TECHNICIANS AND MECHANICS
7240, .RPR-SMALL ENGINE MECHANICS
7260, .RPR-MISCELLANEOUS VEHICLE AND MOBILE EQUIPMENT MECHANICS INSTALLERS. AND REPAIRERS
7300, .RPR-CONTROL AND VALVE INSTALLERS AND REPAIRERS
7315, .RPR-HEATING. AIR CONDITIONING. AND REFRIGERATION MECHANICS AND INSTALLERS
7320, .RPR-HOME APPLIANCE REPAIRERS
7330, .RPR-INDUSTRIAL AND REFRACTORY MACHINERY MECHANICS
7340, .RPR-MAINTENANCE AND REPAIR WORKERS. GENERAL
7350, .RPR-MAINTENANCE WORKERS. MACHINERY
7360, .RPR-MILLWRIGHTS
7410, .RPR-ELECTRICAL POWER-LINE INSTALLERS AND REPAIRERS
7420, .RPR-TELECOMMUNICATIONS LINE INSTALLERS AND REPAIRERS
7430, .RPR-PRECISION INSTRUMENT AND EQUIPMENT REPAIRERS
7510, .RPR-COIN. VENDING. AND AMUSEMENT MACHINE SERVICERS AND REPAIRERS
7540, .RPR-LOCKSMITHS AND SAFE REPAIRERS
7560, .RPR-RIGGERS
7610, .RPR-HELPERS--INSTALLATION. MAINTENANCE. AND REPAIR WORKERS
7630, .RPR-MISCELLANEOUS INSTALLATION. MAINTENANCE. AND REPAIR WORKERS. INCLUDING WIND TURBINE SERVICE TECHNICIANS
7700, .PRD-FIRST-LINE SUPERVISORS OF PRODUCTION AND OPERATING WORKERS
7710, .PRD-AIRCRAFT STRUCTURE. SURFACES. RIGGING. AND SYSTEMS ASSEMBLERS
7720, .PRD-ELECTRICAL. ELECTRONICS. AND ELECTROMECHANICAL ASSEMBLERS
7730, .PRD-ENGINE AND OTHER MACHINE ASSEMBLERS
7740, .PRD-STRUCTURAL METAL FABRICATORS AND FITTERS
7750, .PRD-MISCELLANEOUS ASSEMBLERS AND FABRICATORS
7800, .PRD-BAKERS
7810, .PRD-BUTCHERS AND OTHER MEAT. POULTRY. AND FISH PROCESSING WORKERS
7830, .PRD-FOOD AND TOBACCO ROASTING. BAKING. AND DRYING MACHINE OPERATORS AND TENDERS
7840, .PRD-FOOD BATCHMAKERS
7850, .PRD-FOOD COOKING MACHINE OPERATORS AND TENDERS\
7855, .PRD-FOOD PROCESSING WORKERS. ALL OTHER
7900, .PRD-COMPUTER CONTROL PROGRAMMERS AND OPERATORS
7920, .PRD-EXTRUDING AND DRAWING MACHINE SETTERS. OPERATORS. AND TENDERS. METAL AND PLASTIC
7930, .PRD-FORGING MACHINE SETTERS. OPERATORS. AND TENDERS. METAL AND PLASTIC
7940, .PRD-ROLLING MACHINE SETTERS. OPERATORS. AND TENDERS. METAL AND PLASTIC
7950, .PRD-MACHINE TOOL CUTTING SETTERS. OPERATORS. AND TENDERS.METAL AND PLASTIC
8030, .PRD-MACHINISTS
8040, .PRD-METAL FURNACE OPERATORS. TENDERS. POURERS. AND CASTERS
8100, .PRD-MODEL MAKERS. PATTERNMAKERS. AND MOLDING MACHINE SETTERS. METAL AND PLASTIC
8130, .PRD-TOOL AND DIE MAKERS
8140, .PRD-WELDING. SOLDERING. AND BRAZING WORKERS
8220, .PRD-MISCELLANEOUS METAL WORKERS AND PLASTIC WORKERS. INCLUDING MULTIPLE MACHINE TOOL SETTERS
8250, .PRD-PREPRESS TECHNICIANS AND WORKERS
8255, .PRD-PRINTING PRESS OPERATORS
8256, .PRD-PRINT BINDING AND FINISHING WORKERS
8300, .PRD-LAUNDRY AND DRY-CLEANING WORKERS
8310, .PRD-PRESSERS. TEXTILE. GARMENT. AND RELATED MATERIALS
8320, .PRD-SEWING MACHINE OPERATORS
8330, .PRD-SHOE AND LEATHER WORKERS           
8350, .PRD-TAILORS. DRESSMAKERS. AND SEWERS
8400, .PRD-TEXTILE BLEACHING AND DYEING. AND CUTTING MACHINE SETTERS. OPERATORS. AND TENDERS
8410, .PRD-TEXTILE KNITTING AND WEAVING MACHINE SETTERS. OPERATORS. AND TENDERS
8420, .PRD-TEXTILE WINDING. TWISTING. AND DRAWING OUT MACHINE SETTERS. OPERATORS. AND TENDERS
8450, .PRD-UPHOLSTERERS
8460, .PRD-MISCELLANEOUS TEXTILE. APPAREL. AND FURNISHINGS WORKERS. EXCEPT UPHOLSTERERS
8500, .PRD-CABINETMAKERS AND BENCH CARPENTERS
8510, .PRD-FURNITURE FINISHERS
8530, .PRD-SAWING MACHINE SETTERS. OPERATORS. AND TENDERS. WOOD
8540, .PRD-WOODWORKING MACHINE SETTERS. OPERATORS. AND TENDERS. EXCEPT SAWING
8550, .PRD-MISCELLANEOUS WOODWORKERS. INCLUDING MODEL MAKERS AND PATTERNMAKERS
8600, .PRD-POWER PLANT OPERATORS. DISTRIBUTORS. AND DISPATCHERS
8610, .PRD-STATIONARY ENGINEERS AND BOILER OPERATORS
8620, .PRD-WATER AND WASTEWATER TREATMENT PLANT AND SYSTEM OPERATORS
8630, .PRD-MISCELLANEOUS PLANT AND SYSTEM OPERATORS
8640, .PRD-CHEMICAL PROCESSING MACHINE SETTERS. OPERATORS. AND TENDERS
8650, .PRD-CRUSHING. GRINDING. POLISHING. MIXING. AND BLENDING WORKERS
8710, .PRD-CUTTING WORKERS
8720, .PRD-EXTRUDING. FORMING. PRESSING. AND COMPACTING MACHINE SETTERS. OPERATORS. AND TENDERS
8730, .PRD-FURNACE. KILN. OVEN. DRIER. AND KETTLE OPERATORS AND TENDERS
8740, .PRD-INSPECTORS. TESTERS. SORTERS. SAMPLERS. AND WEIGHERS
8750, .PRD-JEWELERS AND PRECIOUS STONE AND METAL WORKERS
8760, .PRD-MEDICAL. DENTAL. AND OPHTHALMIC LABORATORY TECHNICIANS
8800, .PRD-PACKAGING AND FILLING MACHINE OPERATORS AND TENDERS
8810, .PRD-PAINTING WORKERS
8830, .PRD-PHOTOGRAPHIC PROCESS WORKERS AND PROCESSING MACHINE OPERATORS
8850, .PRD-ADHESIVE BONDING MACHINE OPERATORS AND TENDERS
8910, .PRD-ETCHERS AND ENGRAVERS
8920, .PRD-MOLDERS. SHAPERS. AND CASTERS. EXCEPT METAL AND PLASTIC
8930, .PRD-PAPER GOODS MACHINE SETTERS. OPERATORS. AND TENDERS
8940, .PRD-TIRE BUILDERS
8950, .PRD-HELPERS-PRODUCTION WORKERS
8965, .PRD-MISCELLANEOUS PRODUCTION WORKERS. INCLUDING SEMICONDUCTOR PROCESSORS
9000, .TRN-SUPERVISORS OF TRANSPORTATION AND MATERIAL MOVING WORKERS
9030, .TRN-AIRCRAFT PILOTS AND FLIGHT ENGINEERS
9040, .TRN-AIR TRAFFIC CONTROLLERS AND AIRFIELD OPERATIONS. SPECIALISTS
9050, .TRN-FLIGHT ATTENDANTS
9110, .TRN-AMBULANCE DRIVERS AND ATTENDANTS. EXCEPT EMERGENCY. MEDICAL TECHNICIANS
9120, .TRN-BUS DRIVERS
9130, .TRN-DRIVER/SALES WORKERS AND TRUCK DRIVERS
9140, .TRN-TAXI DRIVERS AND CHAUFFEURS
9150, .TRN-MOTOR VEHICLE OPERATORS. ALL OTHER
9200, .TRN-LOCOMOTIVE ENGINEERS AND OPERATORS
9240, .TRN-RAILROAD CONDUCTORS AND YARDMASTERS
9260, .TRN-SUBWAY. STREETCAR. AND OTHER RAIL TRANSPORTATION. WORKERS
9300, .TRN-SAILORS AND MARINE OILERS. AND SHIP ENGINEERS
9310, .TRN-SHIP AND BOAT CAPTAINS AND OPERATORS
9350, .TRN-PARKING LOT ATTENDANTS
9360, .TRN-AUTOMOTIVE AND WATERCRAFT SERVICE ATTENDANTS
9410, .TRN-TRANSPORTATION INSPECTORS
9415, .TRN-TRANSPORTATION ATTENDANTS. EXCEPT FLIGHT ATTENDANTS
9420, .TRN-MISCELLANEOUS TRANSPORTATION WORKER. INCLUDING BRIDGE. AND LOCK TENDERS AND TRAFFIC TECHNICIANS
9510, .TRN-CRANE AND TOWER OPERATORS
9520, .TRN-DREDGE. EXCAVATING. AND LOADING MACHINE OPERATORS
9560, .TRN-CONVEYOR OPERATORS AND TENDERS. AND HOIST AND WINCH. OPERATORS
9600, .TRN-INDUSTRIAL TRUCK AND TRACTOR OPERATORS
9610, .TRN-CLEANERS OF VEHICLES AND EQUIPMENT
9620, .TRN-LABORERS AND FREIGHT. STOCK. AND MATERIAL MOVERS. HAND
9630, .TRN-MACHINE FEEDERS AND OFFBEARERS
9640, .TRN-PACKERS AND PACKAGERS. HAND
9650, .TRN-PUMPING STATION OPERATORS
9720, .TRN-REFUSE AND RECYCLABLE MATERIAL COLLECTORS
9750, .TRN-MISCELLANEOUS MATERIAL MOVING WORKERS. INCLUDING. MINE SHUTTLE CAR OPERATORS. AND TANK CAR. TRUCK. AND SHIP LOADERS
9800, .MIL-MILITARY OFFICER SPECIAL AND TACTICAL OPERATIONS LEADERS
9810, .MIL-FIRST-LINE ENLISTED MILITARY SUPERVISORS
9820, .MIL-MILITARY ENLISTED TACTICAL OPERATIONS AND AIR/WEAPONS. SPECIALISTS AND CREW MEMBERS
9830, .MIL-MILITARY. RANK NOT SPECIFIED **
9920, .UNEMPLOYED AND LAST WORKED 5 YEARS AGO OR EARLIER OR NEVER WORKED **"
occupation_code <- fread(occupation_code)
occupation_code$OCCP = as.numeric(as.character(occupation_code$OCCP))
save(occupation_code, file = "occupation_code.RData")

load("degree_major_income.RData")
degree_major_income <- left_join(degree_major_income, occupation_code, by = c("OCCP" = "OCCP"))


stat_occupation <- degree_major_income %>%
  filter(FOD1P == 3702) %>%
  mutate(occupation_cat = substr(Occupation_Name, 2,4))

stat_occupation_percent <- stat_occupation %>%
  group_by(SCHL, occupation_cat) %>%
  tally  %>%
  group_by(SCHL) %>%
  mutate( percent = (100*n)/sum(n))

###########
# Bachelor Major Occupation
###########
stat_occupation_bach_percent13 <- stat_occupation_percent %>%
  filter(SCHL == 21, percent > 1, occupation_cat != "N/A")

stat_occupation_bach_percent8 <- stat_occupation_percent %>%
  filter(SCHL == 21, percent > 2, occupation_cat != "N/A")


percent_str_bach <- paste(round(stat_occupation_bach_percent8$percent / sum(stat_occupation_bach_percent8$percent) * 100,1), "%", sep="")
stat_occupation_bach_percent8$percent_str_bach <- percent_str_bach
stat_occupation_bach_percent8 <- stat_occupation_bach_percent8[c(3,6,8,7,4,5,1,2),]

occupation_stat_bach <- ggplot(stat_occupation_bach_percent8) +
  aes(x = "", y = percent, fill = occupation_cat) +
  geom_bar(width = 1, stat = "identity") +
  coord_polar(theta = "y",  start = - pi / 3) +
  scale_fill_manual(name = " ",
                    values =  c("CMM" = "magenta",
                    "MGR" = "dodgerblue", 
                    "OFF" = "gray",
                    "SAL" = "khaki", 
                    "BUS" = "firebrick", 
                    "FIN" = "red",
                    "EDU" = "green", 
                    "CLN" = "tan"),
                    labels=c("Bussiness", "Cleaning", 
                             "Computer", "Education",
                             "Finance", "Management",
                             "Office", "Sales")) +
  #geom_text(aes(x = 1.65, y = percent/2 + c(0, cumsum(percent)[-length(percent)]),  
  #              label = percent_str_bach),size = 10) +
  geom_text(aes(x = 1.2, y = percent/2 + c(0, cumsum(percent)[-length(percent)]),  
                label = occupation_cat),size = 4) +
  ggtitle("Occupation Proportion for Statistics-Bachelor") +
  ylab("") +
  xlab("") +
  theme(panel.background = element_rect(fill = 'white' ),
        plot.title = element_text(size = 25,colour="black"),
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        panel.grid  = element_blank()
        #legend.key.size = unit(2, "cm"),
        #legend.text = element_text(size = 20),
        #legend.title = element_text(size = 13)
        )


###########
# Master Major Occupation
###########
stat_occupation_mast_percent11 <- stat_occupation_percent %>%
  filter(SCHL == 22, percent > 1, occupation_cat != "N/A")

stat_occupation_mast_percent7 <- stat_occupation_percent %>%
  filter(SCHL == 22, percent > 2, occupation_cat != "N/A")


percent_str_mast <- paste(round(stat_occupation_mast_percent7$percent / sum(stat_occupation_mast_percent7$percent) * 100,1), "%", sep="")
stat_occupation_mast_percent7$percent_str_mast <- percent_str_mast
stat_occupation_mast_percent7 <- stat_occupation_mast_percent7[c(2,6,3,1,5,8,7,4),]

occupation_stat_mast <- ggplot(stat_occupation_mast_percent7) +
  aes(x = "", y = percent, fill = occupation_cat) +
  geom_bar(width = 1, stat = "identity") +
  coord_polar(theta = "y",  start = - pi / 3) +
  scale_fill_manual(name = " ",
                    values =  c("CMM" = "magenta",
                                "MGR" = "dodgerblue", 
                                "OFF" = "gray",
                                "SAL" = "khaki", 
                                "BUS" = "firebrick", 
                                "FIN" = "red",
                                "EDU" = "green",
                                "ENG" = "chocolate"),
                    labels=c("Bussiness", "Computer", 
                             "Education", "Engineering",
                             "Finance", "Management",
                             "Office", "Sales")) +
  #geom_text(aes(x = 1.65, y = percent/2 + c(0, cumsum(percent)[-length(percent)]),  
  #              label = percent_str_mast),size = 4) +
  geom_text(aes(x = 1.2, y = percent/2 + c(0, cumsum(percent)[-length(percent)]),  
                label = occupation_cat),size = 4) +
  ggtitle("Occupation Proportion for Statistics-Master") +
  ylab("") +
  xlab("") +
  theme(panel.background = element_rect(fill = 'white' ),
        plot.title = element_text(size = 25,colour="black"),
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        panel.grid  = element_blank()
        #legend.key.size = unit(2, "cm"),
        #legend.text = element_text(size = 20),
        #legend.title = element_text(size = 13)
        )
###########
# Phd Major Occupation
###########
stat_occupation_phd_percent12 <- stat_occupation_percent %>%
  filter(SCHL == 24, percent > 1, occupation_cat != "N/A")

stat_occupation_phd_percent8 <- stat_occupation_percent %>%
  filter(SCHL == 24, percent > 2, occupation_cat != "N/A")

percent_str_phd <- paste(round(stat_occupation_phd_percent8$percent / sum(stat_occupation_phd_percent8$percent) * 100,1), "%", sep="")
stat_occupation_phd_percent8$percent_str_phd <- percent_str_phd
stat_occupation_phd_percent8 <- stat_occupation_phd_percent8[c(2,1,9,6,3,4,5,7,8),]

#Interesting fact, no one play with finance or business anymore
occupation_stat_phd <- ggplot(stat_occupation_phd_percent8) +
  aes(x = "", y = percent, fill = occupation_cat) +
  geom_bar(width = 1, stat = "identity") +
  coord_polar(theta = "y",  start = - pi / 3) +
  scale_fill_manual(name = " ",
                    values =  c("CMM" = "magenta",
                                "MGR" = "dodgerblue", 
                                "OFF" = "gray",
                                "SAL" = "khaki", 
                                "EDU" = "green", 
                                "ENG" = "chocolate",
                                "MED" = "purple1",
                                "SCI" = "cyan",
                                "ENT" = "yellow"),
                    labels=c("Computer","Education", 
                             "Engineering","Entertainment", 
                             "Medical", "Management",
                             "Office", "Sales", "Science")) +
  #geom_text(aes(x = 1.65, y = percent/2 + c(0, cumsum(percent)[-length(percent)]),  
  #              label = percent_str_phd),size = 4) +
  geom_text(aes(x = 1.2, y = percent/2 + c(0, cumsum(percent)[-length(percent)]),  
                label = occupation_cat),size = 4) +
  ggtitle("Occupation Proportion for Statistics-Phd") +
  ylab("") +
  xlab("") +
  theme(panel.background = element_rect(fill = 'white' ),
        plot.title = element_text(size = 25,colour="black"),
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        panel.grid  = element_blank()
        #legend.key.size = unit(2, "cm"),
       # legend.text = element_text(size = 20),
        #legend.title = element_text(size = 13)
       )

################
#Occupation Multiple graph(Bachelor, Master, Phd) in one plot
################
# Multiple plot function
#
# ggplot objects can be passed in ..., or to plotlist (as a list of ggplot objects)
# - cols:   Number of columns in layout
# - layout: A matrix specifying the layout. If present, 'cols' is ignored.
#
# If the layout is something like matrix(c(1,2,3,3), nrow=2, byrow=TRUE),
# then plot 1 will go in the upper left, 2 will go in the upper right, and
# 3 will go all the way across the bottom.

multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
  library(grid)
  
  # Make a list from the ... arguments and plotlist
  plots <- c(list(...), plotlist)
  
  numPlots = length(plots)
  
  # If layout is NULL, then use 'cols' to determine layout
  if (is.null(layout)) {
    # Make the panel
    # ncol: Number of columns of plots
    # nrow: Number of rows needed, calculated from # of cols
    layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
                     ncol = cols, nrow = ceiling(numPlots/cols))
  }
  
  if (numPlots==1) {
    print(plots[[1]])
    
  } else {
    # Set up the page
    grid.newpage()
    pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
    
    # Make each plot, in the correct location
    for (i in 1:numPlots) {
      # Get the i,j matrix positions of the regions that contain this subplot
      matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
      
      print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
                                      layout.pos.col = matchidx$col))
    }
  }
}
multiplot(occupation_stat_bach, occupation_stat_phd,
          occupation_stat_mast, cols=2)








#################################################
#Using Mean as standard
#################################################
################
#(Mean)Occupation Income for Statistics Related Major - Bachelor
################
stat_occupation_bach <- stat_occupation %>%
  filter(SCHL == 21)
stat_occupation_bach_income <- left_join(stat_occupation_bach_percent8, stat_occupation_bach, by = c("occupation_cat" = "occupation_cat"))

stat_occupation_bach_income_field <- stat_occupation_bach_income %>%
  group_by(occupation_cat) %>%
  summarise(average_field = round(mean(PINCP)))

stat_occupation_bach_income_field <- stat_occupation_bach_income_field[c(3,6,8,7,4,5,1,2),]

stat_occupation_bach_income_field$occupation_cat <-factor(stat_occupation_bach_income_field$occupation_cat, levels = unique(stat_occupation_bach_income_field$occupation_cat))

occupation_Income_stat_bach <- ggplot(stat_occupation_bach_income_field) +
  aes(x = occupation_cat, y = average_field, fill = occupation_cat, label = comma(average_field)) +
  geom_bar(width = 1, stat = "identity") +
  geom_text(vjust = 0) +
  scale_fill_manual(name = " ",
                    values =  c("CMM" = "magenta",
                                "MGR" = "dodgerblue", 
                                "OFF" = "gray",
                                "SAL" = "khaki", 
                                "BUS" = "firebrick", 
                                "FIN" = "red",
                                "EDU" = "green", 
                                "CLN" = "tan"),
                    labels = c("Computer","Management",
                               "Sales","Office",
                               "Education","Finance",
                               "Bussiness", "Cleaning")) +
  ggtitle("Occupation Income for Statistics Related Major-Bachelor") +
  scale_y_continuous(labels = comma) +
  ylab("Average Salary") +
  xlab("Occupation Category") +
  scale_x_discrete("Occupation Category", 
                   labels = c("EDU" = "Education","CMM" = "Computer",
                              "MGR" = "Management","SCI" = "Science", "OFF" = "Office",
                              "SAL" = "Sales", "BUS" = "Business", "FIN" = "Finance",
                              "ENG" = "Engineering", "CLN" = "Cleaning")) + 
  theme_bw() +
  theme(axis.text.x = element_text(angle = 30, hjust = 1, face='bold',size=17, color = "black"),
        axis.text.y = element_text(hjust = 1,size=15, color = "black"),
        axis.title.x = element_text(face='bold',size=20, color = "black"),
        axis.title.y = element_text(face='bold',size=20, color = "black"),
        panel.background = element_rect(fill = 'white'),
        plot.title = element_text(size = 20,colour="black"),
        legend.background = element_rect(fill = 'white'))
################
#(Mean)Bachelor Income Adjusted 
################
top_stat_percent_bach <- round(stat_occupation_bach_percent8$percent / sum(stat_occupation_bach_percent8$percent),2)
stat_occupation_bach_percent8$top_stat_percent_bach <- top_stat_percent_bach

stat_occupation_bach <- stat_occupation %>%
  filter(SCHL == 21)

stat_occupation_bach_income <- left_join(stat_occupation_bach_percent8, stat_occupation_bach, by = c("occupation_cat" = "occupation_cat"))

stat_occupation_bach_income_field <- stat_occupation_bach_income %>%
  group_by(occupation_cat) %>%
  summarise(average_field = round(mean(PINCP)))

stat_occupation_bach_income_field <- left_join(stat_occupation_bach_income_field,  stat_occupation_bach_percent8, by = c("occupation_cat" = "occupation_cat"))
stat_occupation_bach_income_field <- stat_occupation_bach_income_field %>%
  mutate(adj_income = round(average_field * top_stat_percent_bach, 0))


stat_occupation_bach_income_field <- stat_occupation_bach_income_field[c(3,6,8,7,4,5,1,2),]

stat_occupation_bach_income_field$occupation_cat <-factor(stat_occupation_bach_income_field$occupation_cat, levels = unique(stat_occupation_bach_income_field$occupation_cat))

occupation_Income_stat_bach_adj <- ggplot(stat_occupation_bach_income_field) +
  aes(x = occupation_cat, y = adj_income, fill = occupation_cat, label = comma(adj_income)) +
  geom_bar(width = 1, stat = "identity") +
  geom_text(vjust=0) +
  scale_fill_manual(name = " ",
                    values =  c("CMM" = "magenta",
                                "MGR" = "dodgerblue", 
                                "OFF" = "gray",
                                "SAL" = "khaki", 
                                "BUS" = "firebrick", 
                                "FIN" = "red",
                                "EDU" = "green", 
                                "CLN" = "tan"),
                    labels = c("Computer","Management",
                               "Sales","Office",
                               "Education","Finance",
                               "Bussiness", "Cleaning")) +
  scale_y_continuous(labels = comma) +
  ylab("Average Income") +
  ggtitle("Occupation Income(adj) for Statistics Related Major-Bachelor") +
  scale_x_discrete("Occupation Category", labels = c("EDU" = "Education","CMM" = "Computer",
                                                     "MGR" = "Management","SCI" = "Science", "OFF" = "Office",
                                                     "SAL" = "Sales", "BUS" = "Business", "FIN" = "Finance",
                                                     "ENG" = "Engineering", "CLN" = "Cleaning")) +
  theme_bw() +
  theme(axis.text.x = element_text(angle = 30, hjust = 1, face='bold',size=17, color = "black"),
        axis.text.y = element_text(hjust = 1,size=15, color = "black"),
        axis.title.x = element_text(face='bold',size=20, color = "black"),
        axis.title.y = element_text(face='bold',size=20, color = "black"),
        panel.background = element_rect(fill = 'white' ),
        plot.title = element_text(size = 20,colour="black"),
        legend.background = element_rect(fill = 'white'))
  
################
#(Mean)Occupation Income for Statistics Related Major - Master
################
stat_occupation_mast <- stat_occupation %>%
  filter(SCHL == 22)

stat_occupation_mast_income <- left_join(stat_occupation_mast_percent7, stat_occupation_mast, by = c("occupation_cat" = "occupation_cat"))

stat_occupation_mast_income_field <- stat_occupation_mast_income %>%
  group_by(occupation_cat) %>%
  summarise(average_field = round(mean(PINCP)))

stat_occupation_mast_income_field <- left_join(stat_occupation_mast_income_field,  stat_occupation_mast_percent8, by = c("occupation_cat" = "occupation_cat"))
stat_occupation_mast_income_field <- stat_occupation_mast_income_field %>%
  mutate(adj_income = round(average_field * top_stat_percent_mast, 0))

stat_occupation_mast_income_field <- stat_occupation_mast_income_field[c(2,6,3,1,5,8,7,4),]

stat_occupation_mast_income_field$occupation_cat <-factor(stat_occupation_mast_income_field$occupation_cat, levels = unique(stat_occupation_mast_income_field$occupation_cat))

occupation_Income_stat_mast <- ggplot(stat_occupation_mast_income_field) +
  aes(x = occupation_cat, y = average_field, fill = occupation_cat, label = comma(average_field)) +
  geom_bar(width = 1, stat = "identity") +
  geom_text(vjust = 0) +
  scale_fill_manual(name = " ",
                    values =  c("CMM" = "magenta",
                                "MGR" = "dodgerblue", 
                                "OFF" = "gray",
                                "SAL" = "khaki", 
                                "BUS" = "firebrick", 
                                "FIN" = "red",
                                "EDU" = "green",
                                "ENG" = "chocolate"),
                    labels=c("Computer","Management",
                             "Education","Bussiness",  
                              "Finance","Sales" ,
                             "Office","Engineering")) +
  scale_y_continuous(labels = comma) +
  ylab("Average Income") +
  ggtitle("Occupation Income for Statistics Related Major-Master") +
  scale_x_discrete("Occupation Category", labels = c("EDU" = "Education","CMM" = "Computer",
                                                     "MGR" = "Management","SCI" = "Science", "OFF" = "Office",
                                                     "SAL" = "Sales", "BUS" = "Business", "FIN" = "Finance",
                                                     "ENG" = "Engineering")) +
  theme_bw() +
  theme(axis.text.x = element_text(angle = 30, hjust = 1, face='bold',size=17, color = "black"),
        axis.text.y = element_text(hjust = 1,size=15, color = "black"),
        axis.title.x = element_text(face='bold',size=20, color = "black"),
        axis.title.y = element_text(face='bold',size=20, color = "black"),
        panel.background = element_rect(fill = 'white' ),
        plot.title = element_text(size = 20,colour="black"),
        legend.background = element_rect(fill = 'white'))

################
#(Mean)Master Income Adjusted 
################
top_stat_percent_mast <- round(stat_occupation_mast_percent7$percent / sum(stat_occupation_mast_percent7$percent),2)
stat_occupation_mast_percent7$top_stat_percent_mast <- top_stat_percent_mast

stat_occupation_mast <- stat_occupation %>%
  filter(SCHL == 22)

stat_occupation_mast_income <- left_join(stat_occupation_mast_percent7, stat_occupation_mast, by = c("occupation_cat" = "occupation_cat"))

stat_occupation_mast_income_field <- stat_occupation_mast_income %>%
  group_by(occupation_cat) %>%
  summarise(average_field = round(mean(PINCP)))

stat_occupation_mast_income_field <- left_join(stat_occupation_mast_income_field,  stat_occupation_mast_percent7, by = c("occupation_cat" = "occupation_cat"))
stat_occupation_mast_income_field <- stat_occupation_mast_income_field %>%
  mutate(adj_income = round(average_field * top_stat_percent_mast, 0))


stat_occupation_mast_income_field <- stat_occupation_mast_income_field[c(2,6,3,1,5,8,7,4),]

stat_occupation_mast_income_field$occupation_cat <-factor(stat_occupation_mast_income_field$occupation_cat, levels = unique(stat_occupation_mast_income_field$occupation_cat))

occupation_Income_stat_mast_adj <- ggplot(stat_occupation_mast_income_field) +
  aes(x = occupation_cat, y = adj_income, fill = occupation_cat, label = comma(adj_income)) +
  geom_bar(width = 1, stat = "identity") +
  geom_text(vjust=0) +
  scale_fill_manual(name = " ",
                    values =  c("CMM" = "magenta",
                                "MGR" = "dodgerblue", 
                                "OFF" = "gray",
                                "SAL" = "khaki", 
                                "BUS" = "firebrick", 
                                "FIN" = "red",
                                "EDU" = "green",
                                "ENG" = "chocolate"),
                    labels=c("Computer","Management",
                             "Education","Bussiness",  
                             "Finance","Sales" ,
                             "Office","Engineering")) +
  scale_x_discrete("Occupation Category", labels = c("EDU" = "Education","CMM" = "Computer",
                                                     "MGR" = "Management","SCI" = "Science", "OFF" = "Office",
                                                     "SAL" = "Sales", "BUS" = "Business", "FIN" = "Finance",
                                                     "ENG" = "Engineering")) +
  ggtitle("Occupation Income(adj) for Statistics Related Major-Master") +
  theme_bw() +
  ylab("Average Income") +
  scale_y_continuous(labels = comma) +
  theme(axis.text.x = element_text(angle = 30, hjust = 1, face='bold',size=17, color = "black"),
        axis.text.y = element_text(hjust = 1,size=15, color = "black"),
        axis.title.x = element_text(face='bold',size=20, color = "black"),
        axis.title.y = element_text(face='bold',size=20, color = "black"),
        panel.background = element_rect(fill = 'white' ),
        plot.title = element_text(size = 20,colour="black"),
        legend.background = element_rect(fill = 'white'))


################
#(Mean)Occupation Income for Statistics Related Major - Phd
################

#for the rest 4 occupations, each of them only have 2 sample,
# In order to get rid of the outliers, we only take the first four occupations 
stat_occupation_phd_percent8

stat_occupation_phd_percent4 <- stat_occupation_phd_percent8 %>%
  filter(percent > 8)

stat_occupation_phd <- stat_occupation %>%
  filter(SCHL == 24)
stat_occupation_phd_income <- left_join(stat_occupation_phd_percent4, stat_occupation_phd, by = c("occupation_cat" = "occupation_cat"))

stat_occupation_phd_income_field <- stat_occupation_phd_income %>%
  group_by(occupation_cat) %>%
  summarise(average_field = round(mean(PINCP)))
stat_occupation_phd_income_field <- stat_occupation_phd_income_field[c(2,1,3),]
#[c(2,1,9,6,3,4,5,7,8),]
stat_occupation_phd_income_field$occupation_cat <-factor(stat_occupation_phd_income_field$occupation_cat, levels = unique(stat_occupation_phd_income_field$occupation_cat))

occupation_Income_stat_phd <- ggplot(stat_occupation_phd_income_field) +
  aes(x = occupation_cat, y = average_field, fill = occupation_cat, label = comma(average_field)) +
  geom_bar(width = 1, stat = "identity") +
  geom_text(vjust = 0) +
  scale_fill_manual(name = " ",
                    values =  c("CMM" = "magenta",
                                "MGR" = "dodgerblue", 
                                "OFF" = "gray",
                                "SAL" = "khaki", 
                                "BUS" = "firebrick", 
                                "FIN" = "red",
                                "EDU" = "green",
                                "ENG" = "chocolate",
                                "SCI" = "cyan"),
                    labels=c("Education","Computer",
                             "Science","Engineering",
                             "Management")) +
  ggtitle("Occupation Income for Statistics Related Major-Phd") +
  ylab("Average Income") +
  scale_y_continuous(labels = comma) +
  scale_x_discrete("Occupation Category", labels = c("EDU" = "Education","CMM" = "Computer",
                                                     "MGR" = "Management","SCI" = "Science", "OFF" = "Office",
                                                     "SAL" = "Sales", "BUS" = "Business", "FIN" = "Finance",
                                                     "ENG" = "Engineering")) +
  theme_bw() +
  theme(axis.text.x = element_text(angle = 30, hjust = 1, face='bold',size=17, color = "black"),
        axis.text.y = element_text(hjust = 1,size=15, color = "black"),
        axis.title.x = element_text(face='bold',size=20, color = "black"),
        axis.title.y = element_text(face='bold',size=20, color = "black"),
        panel.background = element_rect(fill = 'white' ),
        plot.title = element_text(size = 20, colour="black"),
        legend.background = element_rect(fill = 'white'))
################
#(Mean)Phd Income Adjusted 
################
stat_occupation_phd_percent4 <- stat_occupation_phd_percent8 %>%
  filter(percent > 8)

top_stat_percent_phd <- round(stat_occupation_phd_percent4$percent / sum(stat_occupation_phd_percent4$percent),2)
stat_occupation_phd_percent4$top_stat_percent_phd <- top_stat_percent_phd

stat_occupation_phd <- stat_occupation %>%
  filter(SCHL == 24)

stat_occupation_phd_income <- left_join(stat_occupation_phd_percent4, stat_occupation_phd, by = c("occupation_cat" = "occupation_cat"))

stat_occupation_phd_income_field <- stat_occupation_phd_income %>%
  group_by(occupation_cat) %>%
  summarise(average_field = round(mean(PINCP)))

stat_occupation_phd_income_field <- left_join(stat_occupation_phd_income_field,  stat_occupation_phd_percent4, by = c("occupation_cat" = "occupation_cat"))
stat_occupation_phd_income_field <- stat_occupation_phd_income_field %>%
  mutate(adj_income = round(average_field * top_stat_percent_phd, 0))


stat_occupation_phd_income_field <- stat_occupation_phd_income_field[c(2,1,3),]

stat_occupation_phd_income_field$occupation_cat <-factor(stat_occupation_phd_income_field$occupation_cat, levels = unique(stat_occupation_phd_income_field$occupation_cat))

occupation_Income_stat_phd_adj <- ggplot(stat_occupation_phd_income_field) +
  aes(x = occupation_cat, y = adj_income, fill = occupation_cat, label = comma(adj_income)) +
  geom_bar(width = 1, stat = "identity") +
  geom_text(vjust=0) +
  scale_fill_manual(name = " ",
                    values =  c("CMM" = "magenta",
                                "MGR" = "dodgerblue", 
                                "OFF" = "gray",
                                "SAL" = "khaki", 
                                "BUS" = "firebrick", 
                                "FIN" = "red",
                                "EDU" = "green",
                                "ENG" = "chocolate",
                                "SCI" = "cyan"),
                    labels=c("Education","Computer",
                             "Science","Engineering",
                             "Management")) +
  ggtitle("Occupation Income(adj) for Statistics Related Major-Phd") +
  ylab("Average Income")+
  scale_y_continuous(labels = comma) +
  scale_x_discrete("Occupation Category", labels = c("EDU" = "Education","CMM" = "Computer",
                                                     "MGR" = "Management","SCI" = "Science", "OFF" = "Office",
                                                     "SAL" = "Sales", "BUS" = "Business", "FIN" = "Finance",
                                                     "ENG" = "Engineering")) +
  theme_bw() +
  theme(axis.text.x = element_text(angle = 30, hjust = 1, face='bold',size=17, color = "black"),
        axis.text.y = element_text(hjust = 1,size=15, color = "black"),
        axis.title.x = element_text(face='bold',size=20, color = "black"),
        axis.title.y = element_text(face='bold',size=20, color = "black"),
        panel.background = element_rect(fill = 'white' ),
        plot.title = element_text(size = 20,colour="black"),
        legend.background = element_rect(fill = 'white'))



################
#(Median)Occupation Income for Statistics Related Major - All Degree
################

stat_occupation_degree <- stat_occupation %>%
  group_by(SCHL) %>%
  summarise(ave_income_degree = round(mean(PINCP),0), median_income_degree = median(PINCP),
            max_income_degree = max(PINCP), min_income_degree = min(PINCP))

stat_occupation_degree <- left_join(stat_occupation_degree, degree_name, by = c("SCHL" = "SCHL")) 

occupation_Income_stat <- ggplot(stat_occupation_degree) +
  aes(x = degree, y = median_income_degree, fill = degree, label = comma(median_income_degree)) +
  geom_bar(width = 1, stat = "identity") +
  geom_text(vjust = 0) +
  #ggtitle("Occupation Income for Statistics Related Major - All Degree") +
  scale_y_continuous(labels = comma) +
  ylab("Average Income") +
  xlab("") +
  ggtitle("Average income of each degree") +
  theme_bw() +
  theme(axis.text.x = element_text(face='bold',size=17, color = "black"),
        axis.text.y = element_text(hjust = 1,size=17, color = "black"),
        axis.title.x = element_text(face='bold',size=20, color = "black"),
        axis.title.y = element_text(face='bold',size=20, color = "black"),
        panel.background = element_rect(fill = 'white' ),
        #plot.title = element_text(size = "35", colour="black"),
        legend.background = element_rect(fill = 'white'),
        legend.text = element_text(size = 20),
        legend.title = element_text(size = 13),
        title = element_text(face='bold',size=30, color = "black"))
################
#(Mean)Occupation Income Multiple graph(Bachelor, Master, Phd) in one plot
################
multiplot(occupation_Income_stat_bach, occupation_Income_stat_phd,
          occupation_Income_stat_mast, cols=2)

multiplot(occupation_Income_stat_bach_adj, occupation_Income_stat_phd_adj,
          occupation_Income_stat_mast_adj, cols=2)

occupation_Income_stat







if(FALSE) 
  {
#################################################
#Using Median as standard(Backup):No beatifying
#################################################
################
#(Median)Occupation Income for Statistics Related Major - Bachelor
################
stat_occupation_bach <- stat_occupation %>%
  filter(SCHL == 21)
stat_occupation_bach_income <- left_join(stat_occupation_bach_percent8, stat_occupation_bach, by = c("occupation_cat" = "occupation_cat"))

stat_occupation_bach_income_field <- stat_occupation_bach_income %>%
  group_by(occupation_cat) %>%
  summarise(median_field = round(median(PINCP)))
stat_occupation_bach_income_field <- stat_occupation_bach_income_field[c(2,6,7,8,1,5,3,4),]

stat_occupation_bach_income_field$occupation_cat <-factor(stat_occupation_bach_income_field$occupation_cat, levels = unique(stat_occupation_bach_income_field$occupation_cat))

occupation_Income_stat_bach <- ggplot(stat_occupation_bach_income_field) +
  aes(x = occupation_cat, y = median_field, fill = occupation_cat, label = median_field) +
  geom_bar(width = 1, stat = "identity") +
  geom_text(vjust = 0) +
  scale_fill_manual(values =  c("CMM" = "magenta",
                                "MGR" = "dodgerblue", 
                                "OFF" = "gray",
                                "SAL" = "khaki", 
                                "BUS" = "firebrick", 
                                "FIN" = "red",
                                "EDU" = "green", 
                                "ENG" = "tan")) +
  ggtitle("Occupation Income for Statistics Related Major - Bachelor")
################
#(Median)Bachelor Income Adjusted 
################
top_stat_percent_bach <- round(stat_occupation_bach_percent8$percent / sum(stat_occupation_bach_percent8$percent),2)
stat_occupation_bach_percent8$top_stat_percent_bach <- top_stat_percent_bach

stat_occupation_bach <- stat_occupation %>%
  filter(SCHL == 21)

stat_occupation_bach_income <- left_join(stat_occupation_bach_percent8, stat_occupation_bach, by = c("occupation_cat" = "occupation_cat"))

stat_occupation_bach_income_field <- stat_occupation_bach_income %>%
  group_by(occupation_cat) %>%
  summarise(median_field = round(median(PINCP)))

stat_occupation_bach_income_field <- left_join(stat_occupation_bach_income_field,  stat_occupation_bach_percent8, by = c("occupation_cat" = "occupation_cat"))
stat_occupation_bach_income_field <- stat_occupation_bach_income_field %>%
  mutate(adj_income = round(median_field * top_stat_percent_bach, 0))


stat_occupation_bach_income_field <- stat_occupation_bach_income_field[c(2,6,7,8,1,5,3,4),]

stat_occupation_bach_income_field$occupation_cat <-factor(stat_occupation_bach_income_field$occupation_cat, levels = unique(stat_occupation_bach_income_field$occupation_cat))

occupation_Income_stat_bach_adj <- ggplot(stat_occupation_bach_income_field) +
  aes(x = occupation_cat, y = adj_income, fill = occupation_cat, label = adj_income) +
  geom_bar(width = 1, stat = "identity") +
  geom_text(vjust=0) +
  scale_fill_manual(values =  c("CMM" = "magenta",
                                "MGR" = "dodgerblue", 
                                "OFF" = "gray",
                                "SAL" = "khaki", 
                                "BUS" = "firebrick", 
                                "FIN" = "red",
                                "EDU" = "green", 
                                "ENG" = "tan")) +
  ggtitle("Occupation Income(ADJ) for Statistics Related Major - Bachelor")

################
#(Median)Occupation Income for Statistics Related Major - Master
################
stat_occupation_mast <- stat_occupation %>%
  filter(SCHL == 22)
stat_occupation_mast_income <- left_join(stat_occupation_mast_percent7, stat_occupation_mast, by = c("occupation_cat" = "occupation_cat"))

stat_occupation_mast_income_field <- stat_occupation_mast_income %>%
  group_by(occupation_cat) %>%
  summarise(median_field = round(median(PINCP)))
stat_occupation_mast_income_field <- stat_occupation_mast_income_field[c(5,2,1,3,4,6,7),]

stat_occupation_mast_income_field$occupation_cat <-factor(stat_occupation_mast_income_field$occupation_cat, levels = unique(stat_occupation_mast_income_field$occupation_cat))

occupation_Income_stat_mast <- ggplot(stat_occupation_mast_income_field) +
  aes(x = occupation_cat, y = median_field, fill = occupation_cat, label = median_field) +
  geom_bar(width = 1, stat = "identity") +
  geom_text(vjust = 0) +
  scale_fill_manual(values =  c("CMM" = "magenta",
                                "MGR" = "dodgerblue", 
                                "OFF" = "gray",
                                "SAL" = "khaki", 
                                "BUS" = "firebrick", 
                                "FIN" = "red",
                                "EDU" = "green")) +
  ggtitle("Occupation Income for Statistics Related Major - Master")
################
#(Median)Master Income Adjusted 
################
top_stat_percent_mast <- round(stat_occupation_mast_percent7$percent / sum(stat_occupation_mast_percent7$percent),2)
stat_occupation_mast_percent7$top_stat_percent_mast <- top_stat_percent_mast

stat_occupation_mast <- stat_occupation %>%
  filter(SCHL == 22)

stat_occupation_mast_income <- left_join(stat_occupation_mast_percent7, stat_occupation_mast, by = c("occupation_cat" = "occupation_cat"))

stat_occupation_mast_income_field <- stat_occupation_mast_income %>%
  group_by(occupation_cat) %>%
  summarise(median_field = round(median(PINCP)))

stat_occupation_mast_income_field <- left_join(stat_occupation_mast_income_field,  stat_occupation_mast_percent7, by = c("occupation_cat" = "occupation_cat"))
stat_occupation_mast_income_field <- stat_occupation_mast_income_field %>%
  mutate(adj_income = round(median_field * top_stat_percent_mast, 0))


stat_occupation_mast_income_field <- stat_occupation_mast_income_field[c(5,2,1,3,4,6,7),]

stat_occupation_mast_income_field$occupation_cat <-factor(stat_occupation_mast_income_field$occupation_cat, levels = unique(stat_occupation_mast_income_field$occupation_cat))

occupation_Income_stat_mast_adj <- ggplot(stat_occupation_mast_income_field) +
  aes(x = occupation_cat, y = adj_income, fill = occupation_cat, label = adj_income) +
  geom_bar(width = 1, stat = "identity") +
  geom_text(vjust=0) +
  scale_fill_manual(values =  c("CMM" = "magenta",
                                "MGR" = "dodgerblue", 
                                "OFF" = "gray",
                                "SAL" = "khaki", 
                                "BUS" = "firebrick", 
                                "FIN" = "red",
                                "EDU" = "green")) +
  ggtitle("Occupation(ADJ) Income for Statistics Related Major - Master")



################
#(Median)Occupation Income for Statistics Related Major - Phd
################

#for the rest 4 occupations, each of them only have 2 sample,
# In order to get rid of the outliers, we only take the first four occupations 
stat_occupation_phd_percent8

stat_occupation_phd_percent4 <- stat_occupation_phd_percent8 %>%
  filter(percent > 8)

stat_occupation_phd <- stat_occupation %>%
  filter(SCHL == 24)
stat_occupation_phd_income <- left_join(stat_occupation_phd_percent4, stat_occupation_phd, by = c("occupation_cat" = "occupation_cat"))

stat_occupation_phd_income_field <- stat_occupation_phd_income %>%
  group_by(occupation_cat) %>%
  summarise(median_field = round(median(PINCP)))
stat_occupation_phd_income_field <- stat_occupation_phd_income_field[c(2,1,3,4),]

stat_occupation_phd_income_field$occupation_cat <-factor(stat_occupation_phd_income_field$occupation_cat, levels = unique(stat_occupation_phd_income_field$occupation_cat))

occupation_Income_stat_phd <- ggplot(stat_occupation_phd_income_field) +
  aes(x = occupation_cat, y = median_field, fill = occupation_cat, label = median_field) +
  geom_bar(width = 1, stat = "identity") +
  geom_text(vjust = 0) +
  scale_fill_manual(values =  c("CMM" = "magenta",
                                "MGR" = "dodgerblue", 
                                "OFF" = "gray",
                                "SAL" = "khaki", 
                                "EDU" = "green", 
                                "ENG" = "tan",
                                "MED" = "purple1",
                                "SCI" = "cyan")) +
  ggtitle("Occupation Income for Statistics Related Major - Phd")

################
#(Median)Phd Income Adjusted 
################
stat_occupation_phd_percent4 <- stat_occupation_phd_percent8 %>%
  filter(percent > 8)

top_stat_percent_phd <- round(stat_occupation_phd_percent4$percent / sum(stat_occupation_phd_percent4$percent),2)
stat_occupation_phd_percent4$top_stat_percent_phd <- top_stat_percent_phd

stat_occupation_phd <- stat_occupation %>%
  filter(SCHL == 24)

stat_occupation_phd_income <- left_join(stat_occupation_phd_percent4, stat_occupation_phd, by = c("occupation_cat" = "occupation_cat"))

stat_occupation_phd_income_field <- stat_occupation_phd_income %>%
  group_by(occupation_cat) %>%
  summarise(median_field = round(median(PINCP)))

stat_occupation_phd_income_field <- left_join(stat_occupation_phd_income_field,  stat_occupation_phd_percent4, by = c("occupation_cat" = "occupation_cat"))
stat_occupation_phd_income_field <- stat_occupation_phd_income_field %>%
  mutate(adj_income = round(median_field * top_stat_percent_phd, 0))


stat_occupation_phd_income_field <- stat_occupation_phd_income_field[c(2,1,3,4),]

stat_occupation_phd_income_field$occupation_cat <-factor(stat_occupation_phd_income_field$occupation_cat, levels = unique(stat_occupation_phd_income_field$occupation_cat))

occupation_Income_stat_phd_adj <- ggplot(stat_occupation_phd_income_field) +
  aes(x = occupation_cat, y = adj_income, fill = occupation_cat, label = adj_income) +
  geom_bar(width = 1, stat = "identity") +
  geom_text(vjust=0) +
  scale_fill_manual(values =  c("CMM" = "magenta",
                                "MGR" = "dodgerblue", 
                                "OFF" = "gray",
                                "SAL" = "khaki", 
                                "EDU" = "green", 
                                "ENG" = "tan",
                                "MED" = "purple1",
                                "SCI" = "cyan")) +
  ggtitle("Occupation Income(ADJ) for Statistics Related Major - Phd")
}


################################################
#Occupation for Computer Science Major
################################################
comp_occupation <- degree_major_income %>%
  filter(FOD1P %in% c(2102, 4005) ) %>%
  mutate(occupation_cat = substr(Occupation_Name, 2,4))

comp_occupation_percent <- comp_occupation %>%
  group_by(SCHL, occupation_cat) %>%
  tally  %>%
  group_by(SCHL) %>%
  mutate( percent = (100*n)/sum(n))


comp_occupation_mast_percent8 <- comp_occupation_percent %>%
  filter(SCHL == 22, percent > 2, occupation_cat != "N/A")


percent_str_mast <- paste(round(comp_occupation_mast_percent8$percent / sum(comp_occupation_mast_percent8$percent) * 100,1), "%", sep="")
comp_occupation_mast_percent8$percent_str_mast <- percent_str_mast
comp_occupation_mast_percent8 <- comp_occupation_mast_percent8[c(2,6,3,4,8,1,7,5),]

occupation_comp_mast <- ggplot(comp_occupation_mast_percent8) +
  aes(x = "", y = percent, fill = occupation_cat) +
  geom_bar(width = 1, stat = "identity") +
  coord_polar(theta = "y",  start = - pi / 3) +
  scale_fill_manual(name = "Occupation",
                    values =  c("CMM" = "magenta",
                                "MGR" = "dodgerblue", 
                                "OFF" = "gray",
                                "SAL" = "khaki", 
                                "BUS" = "firebrick", 
                                "FIN" = "red",
                                "EDU" = "green", 
                                "CLN" = "tan",
                                "ENG" = "chocolate"),
                    labels=c("Bussiness", "Cleaning", 
                             "Computer", "Education",
                             "Finance", "Management",
                             "Office", "Sales")) +
  #geom_text(aes(x = 1.65, y = percent/2 + c(0, cumsum(percent)[-length(percent)]),  
  #              label = percent_str_mast),size = 4) +
  geom_text(aes(x = 1.3, y = percent/2 + c(0, cumsum(percent)[-length(percent)]),  
                label = occupation_cat),size = 6) +
  ggtitle("Occupation Proportion for Computer Science Master") +
  ylab("") +
  xlab("") +
  theme(panel.background = element_rect(fill = 'white' ),
        plot.title = element_text(size = 40,colour="black"),
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        panel.grid  = element_blank(),
        legend.key.size = unit(2, "cm"),
        legend.text = element_text(size = 20),
        legend.title = element_text(size = 13))

################
#(Mean)Occupation Income for Computer Science Major - Master
################
comp_occupation_mast <- comp_occupation %>%
  filter(SCHL == 22)
comp_occupation_mast_income <- left_join(comp_occupation_mast_percent8, comp_occupation_mast, by = c("occupation_cat" = "occupation_cat"))

comp_occupation_mast_income_field <- comp_occupation_mast_income %>%
  group_by(occupation_cat) %>%
  summarise(average_field = round(mean(PINCP)))
comp_occupation_mast_income_field <- comp_occupation_mast_income_field[c(2,6,3,4,8,1,7,5),]

comp_occupation_mast_income_field$occupation_cat <-factor(comp_occupation_mast_income_field$occupation_cat, levels = unique(comp_occupation_mast_income_field$occupation_cat))

occupation_Income_comp_mast <- ggplot(comp_occupation_mast_income_field) +
  aes(x = occupation_cat, y = average_field, fill = occupation_cat, label = comma(average_field)) +
  geom_bar(width = 1, stat = "identity") +
  geom_text(vjust = 0) +
  scale_fill_manual(name = "Occupation",
                    values =  c("CMM" = "magenta",
                                "MGR" = "dodgerblue", 
                                "OFF" = "gray",
                                "SAL" = "khaki", 
                                "BUS" = "firebrick", 
                                "FIN" = "red",
                                "EDU" = "green", 
                                "CLN" = "tan",
                                "ENG" = "chocolate"),
                    labels=c("Computer","Management",
                             "Education","Engineering",
                             "Sales","Bussiness", 
                             "Office","Finance")) +
  ggtitle("Occupation Income for Computer Science Related Major-Master") +
  scale_y_continuous(labels = comma) +
  ylab("Average Income") +
  scale_x_discrete("Occupation Category", labels = c("EDU" = "Education","CMM" = "Computer",
                                                      "MGR" = "Management","SCI" = "Science", "OFF" = "Office",
                                                      "SAL" = "Sales", "BUS" = "Business", "FIN" = "Finance",
                                                      "ENG" = "Engineering")) +  
  theme_bw() +
  theme(axis.text.x = element_text(angle = 30, hjust = 1, face='bold',size=17, color = "black"),
        axis.text.y = element_text(hjust = 1,size=15, color = "black"),
        axis.title.x = element_text(face='bold',size=20, color = "black"),
        axis.title.y = element_text(face='bold',size=20, color = "black"),
        panel.background = element_rect(fill = 'white' ),
        plot.title = element_text(size = "20", colour="black"),
        legend.background = element_rect(fill = 'white'))
################
#(Mean)Master Income Adjusted 
################
top_comp_percent_mast <- round(comp_occupation_mast_percent8$percent / sum(comp_occupation_mast_percent8$percent),2)
comp_occupation_mast_percent8$top_comp_percent_mast <- top_comp_percent_mast

comp_occupation_mast <- comp_occupation %>%
  filter(SCHL == 22)

comp_occupation_mast_income <- left_join(comp_occupation_mast_percent8, comp_occupation_mast, by = c("occupation_cat" = "occupation_cat"))

comp_occupation_mast_income_field <- comp_occupation_mast_income %>%
  group_by(occupation_cat) %>%
  summarise(average_field = round(mean(PINCP)))

comp_occupation_mast_income_field <- left_join(comp_occupation_mast_income_field,  comp_occupation_mast_percent8, by = c("occupation_cat" = "occupation_cat"))
comp_occupation_mast_income_field <- comp_occupation_mast_income_field %>%
  mutate(adj_income = round(average_field * top_comp_percent_mast, 0))


comp_occupation_mast_income_field <- comp_occupation_mast_income_field[c(2,6,3,4,8,1,7,5),]

comp_occupation_mast_income_field$occupation_cat <-factor(comp_occupation_mast_income_field$occupation_cat, levels = unique(comp_occupation_mast_income_field$occupation_cat))

occupation_Income_comp_mast_adj <- ggplot(comp_occupation_mast_income_field) +
  aes(x = occupation_cat, y = adj_income, fill = occupation_cat, label = comma(adj_income)) +
  geom_bar(width = 1, stat = "identity") +
  geom_text(vjust=0) +
  scale_fill_manual(name = "Occupation",
                    values =  c("CMM" = "magenta",
                                "MGR" = "dodgerblue", 
                                "OFF" = "gray",
                                "SAL" = "khaki", 
                                "BUS" = "firebrick", 
                                "FIN" = "red",
                                "EDU" = "green", 
                                "CLN" = "tan",
                                "ENG" = "chocolate"),
                    labels=c("Computer","Management",
                             "Education","Engineering",
                             "Sales","Bussiness", 
                             "Office","Finance")) +
  ggtitle("Occupation(adj) Income for Computer Science Major-Master") +
  scale_y_continuous(labels = comma) +
  ylab("Average Income") +
  scale_x_discrete("Occupation Category", labels = c("EDU" = "Education","CMM" = "Computer",
                                                     "MGR" = "Management","SCI" = "Science", "OFF" = "Office",
                                                     "SAL" = "Sales", "BUS" = "Business", "FIN" = "Finance",
                                                     "ENG" = "Engineering")) +  
  theme_bw() +
  theme(axis.text.x = element_text(angle = 30, hjust = 1, face='bold',size=17, color = "black"),
        axis.text.y = element_text(hjust = 1,size=15, color = "black"),
        axis.title.x = element_text(face='bold',size=20, color = "black"),
        axis.title.y = element_text(face='bold',size=20, color = "black"),
        panel.background = element_rect(fill = 'white' ),
        plot.title = element_text(size = "20", colour="black"),
        legend.background = element_rect(fill = 'white'))


multiplot(occupation_Income_comp_mast, 
          occupation_Income_stat_mast, cols=2)

multiplot( occupation_Income_comp_mast_adj, 
           occupation_Income_stat_mast_adj, cols=2)

multiplot(occupation_comp_mast, occupation_stat_mast, cols=2)

dbDisconnect(dcon)
